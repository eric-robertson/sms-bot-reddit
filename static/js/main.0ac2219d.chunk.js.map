{"version":3,"sources":["api.js","Lookup.js","AddPhone.js","App.js","reportWebVitals.js","index.js"],"names":["api","request","route","body","callback","a","fetch","method","JSON","stringify","data","json","requestResults","search","length","API","phone","resultListing","click","hour","Math","floor","padStart","min","textContent","rule","type","subreddit","msg","className","onMouseUp","substring","useState","text","setText","results","setResults","classes","push","remove","id","join","placeholder","onChange","e","target","value","map","v","key","style","marginBottom","state","setState","handleChange","name","submitForm","numHours","isAM","parseInt","numSeconds","minute","payload","msgType","txtMsg","number","phoneNum","time","alert","window","location","reload","display","paddingTop","width","margin","fontSize","color","marginTop","onClick","App","lookupTab","setLookupTab","src","Lookup","AddPhone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac2219d.chunk.js","sourcesContent":["const api = 'https://mptduze5ug.execute-api.us-east-1.amazonaws.com/dev'\r\n\r\nexport async function request ( route, body, callback ) {\r\n\r\n    const data = await fetch(`${api}/${route}`, {\r\n        method: 'POST',\r\n        body : JSON.stringify(body)\r\n    })\r\n    \r\n    return data.json()\r\n\r\n}","import React, { useState } from 'react'\r\nimport * as API from './api'\r\n\r\nasync function requestResults ( search, callback ) {\r\n    if ( search.length < 10) callback(false)\r\n    else if ( search.length != 10 ) callback([])\r\n    else {\r\n        let data = await API.request('lookupNumber', { phone : search  })\r\n        callback( data.data )\r\n    }\r\n}   \r\n\r\nfunction resultListing ( data, click ) {\r\n    let hour = (\"\" + Math.floor(data['trigger-time'] / ( 60 * 60))).padStart(2,'0')\r\n    let min = (\"\" + Math.floor((data['trigger-time'] % (60 * 60))/60)).padStart(2, '0')\r\n    \r\n\r\n    let textContent = '';\r\n    if (data.rule.type == 'reddit'){\r\n        textContent = `Top image from r/${data.rule.subreddit}`\r\n    }\r\n    if (data.rule.type == 'raw'){\r\n        textContent = `Raw message \"${data.rule.msg}\"`\r\n    }\r\n\r\n    return <div className='numberResult' onMouseUp={click}>\r\n        <div className='phoneNumber' >\r\n            ({data['phone-number'].substring(0,3)})-{data['phone-number'].substring(3,6)}-{data['phone-number'].substring(6)}\r\n        </div>\r\n        <div className='time'>\r\n            Sends @ {hour}:{min}\r\n        </div>\r\n        <div className=\"textContent\">\r\n            {textContent}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default () => {\r\n    \r\n    const [text, setText] = useState('')\r\n    const [results, setResults] = useState(false)\r\n\r\n    let classes = ['search']\r\n    if ( text.length > 0 ) classes.push('active')\r\n\r\n    let changeText = (e) => {\r\n        setText(e.target.value)\r\n        requestResults(e.target.value, setResults )\r\n    }\r\n\r\n    let remove = async ( id )=> {\r\n        await API.request('deleteRule', { id : id  })\r\n        requestResults(text, setResults )\r\n    }\r\n\r\n\r\n    return <div>\r\n        <input className={classes.join(' ')} placeholder=\"Lookup by phone-number\" onChange={changeText} />\r\n        <div className=\"resultsLabel\">\r\n            Click to remove a rule\r\n        </div>\r\n        { results && <div>\r\n            {results.map((v,key)=><div key={key} style={{marginBottom: 20}}>\r\n                {resultListing(v, () => remove(v.id))}\r\n            </div>)}\r\n            {results.length == 0 ? <div>No rules for that number</div> : ''}\r\n        </div>       } \r\n        \r\n    </div>\r\n\r\n}","import React, { useState } from 'react'\r\nimport * as API from './api'\r\n\r\nexport default () => {\r\n    const [state, setState] = useState({'isAM': true, 'msgType': 'raw'})\r\n    const handleChange = ({ target }) => setState({ ...state, [target.name]: target.value })\r\n\r\n    const submitForm = async () => {\r\n        // Calculate number of seconds from hours/mins/am\r\n        let numHours = (state.isAM === true) ? parseInt(state.hour) : parseInt(state.hour) + 12\r\n        let numSeconds =  numHours * 60 * 60\r\n        numSeconds += parseInt(state.minute) * 60\r\n\r\n        // Create payload based on reddit/raw type\r\n        let payload = { type: state.msgType }\r\n        \r\n        if (state.msgType === 'raw')\r\n            payload.msg = state.txtMsg\r\n        else\r\n            payload.subreddit = state.txtMsg\r\n\r\n        // Make API call\r\n        let data = await API.request('createRule', {\r\n            number: state.phoneNum,\r\n            time: numSeconds,\r\n            payload\r\n        })\r\n\r\n        alert( 'New rule added!' )\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'relative', paddingTop: 200, width: 600, margin: 'auto'}}>\r\n        <div style={{fontSize: 15, color: 'grey', marginTop: 40}}>\r\n            Enter a phone number and an aproximate time for message to be sent\r\n            </div>\r\n            <div>\r\n                <input className=\"phone-box\" placeholder=\"Phone Number\" type=\"text\" name=\"phoneNum\" onChange={handleChange} />\r\n                <input  className=\"time-box\" type=\"text\" name=\"hour\" onChange={handleChange} placeholder='01' />\r\n                :\r\n                <input   className=\"time-box\"type=\"text\" name=\"minute\" onChange={handleChange} placeholder='23'  />\r\n\r\n                <select className='dropdown' name=\"isAM\" id=\"dropdown\" onChange={handleChange}>\r\n                    <option value={true}>AM</option>\r\n                    <option value={false}>PM</option>\r\n                </select>\r\n            </div>\r\n            <div style={{fontSize: 15, color: 'grey', marginTop: 40}}>\r\n            Send either a raw message or the top post from a given subreddit\r\n            </div>\r\n            <div style={{margin: 20 }}>\r\n                <select className='dropdown' name=\"msgType\" id=\"msgType\" onChange={handleChange} >\r\n                    <option value=\"raw\">Raw Message</option>\r\n                    <option value=\"reddit\">Subreddit</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                {state.msgType=='raw' ? \r\n                    <textarea className='textfield' placeholder=\"Message to be sent\" type=\"text\" name=\"txtMsg\" onChange={handleChange} />\r\n                    : <input  className='textfield2' placeholder=\"r/me_irl\" type=\"text\" name=\"txtMsg\" onChange={handleChange} />\r\n                }\r\n            </div>\r\n\r\n            <button onClick={submitForm} className=\"button\">\r\n                Create Rule!\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './App.css'\r\nimport { useState } from 'react'\r\nimport Lookup from './Lookup'\r\nimport AddPhone from './AddPhone'\r\n\r\nconst App = () => {\r\n  const [lookupTab, setLookupTab] = useState(false)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <div className=\"switcher\">\r\n            <button onClick={() => setLookupTab(true)}>\r\n                Edit Rules\r\n            </button>\r\n            <button onClick={() => setLookupTab(false)}>\r\n                Add Rules\r\n            </button>\r\n\r\n        </div>\r\n\r\n        <img src=\"logo.svg\" />\r\n\r\n      {lookupTab\r\n        ? <Lookup />\r\n        : <AddPhone />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Lookup from './Lookup';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}